#include <iostream>
#define KUOTA_STACK 5

struct TNode{
	int data;
	TNode *next;
};

TNode *head;

void init(){
	head = NULL;
}

bool isEmpty(){
	return head == NULL;
}

bool isFull(){
	if(isEmpty() == 1){
		return 0;
	}
	else {
		TNode *bantu;
		int f;
		bantu = head;
		while (bantu != '\0'){
			f++;
			bantu=bantu->next;
		}
		return f>KUOTA_STACK-1;
	}
}

class MyStack{
    public:
    int getTop(){
    	return head->data;
	}
    void push(int databaru){
		TNode *baru;
		baru = new TNode;
		baru->data = databaru;
		baru->next=NULL;
		if(isEmpty() == 1){
			baru->next = head;
			head=baru;
		}
		else{
			baru->next=head;
			head=baru;
		}
		cout<<"Nilai "<<getTop()<<" masuk\n";
	}
    void pop(){
    	TNode *hapus;
		int d;
		hapus = head;
		d = head->data;
		head=head->next;
		delete hapus;
		cout<<endl<<d<<" terambil\n";
    }
};

void menu(){
    char pilih1, ulang;
    int data,x;
    MyStack s;

    do{
      	system("cls");
      	cout<<"STACK SINGLE LINKED LIST \n------------------------\n\n";
      	printStackList();
      	cout<<"\nMenu : \n1. Isi\n2. Pop\n3. Keluar\n>>";
      	cin>>pilih1;

      	switch(pilih1){
      		case '1' :
      			if(isFull() == 0){
      				cout<<"\nMasukkan data : ";
            		cin>>data;
            		s.push(data);
            	}
				else
					cout<<"\nStack penuh!\n";
				break;
      		case '2' :
      			if (isEmpty() == 0){
				  	s.pop();
      			}
      			else
      				cout<<"\nStack masih kosong!\n";
            	break;
      		case '3' :
      			exit(0);
            	break;
      		default :
            	cout<<"\nPilih ulang"<<endl;
      	}
      	cout<<"\nKembali ke menu?(y/n)\n>>";
      	cin>>ulang;
    }
	while(ulang=='y' || ulang=='Y');
}

int main(){
    menu();
    return 0;
}
