#include <iostream>
#define KUOTA_STACK 5

struct TNode{
	int data;
	TNode *next;
};

TNode *head;

void init(){
	head = NULL;
}

bool isEmpty(){
	return head == NULL;
}

bool isFull(){
	if(isEmpty() == 1){
		return 0;
	}
	else {
		TNode *bantu;
		int f;
		bantu = head;
		while (bantu != '\0'){
			f++;
			bantu=bantu->next;
		}
		return f>KUOTA_STACK-1;
	}
}

class MyStack {
    public:
    int getTop(){
    	return head->data;
	}
    void push(int databaru){
		TNode *baru;
		baru = new TNode;
		baru->data = databaru;
		baru->next=NULL;
		if(isEmpty() == 1){
			baru->next = head;
			head=baru;
		}
		else{
			baru->next=head;
			head=baru;
		}
		cout<<"Nilai "<<getTop()<<" masuk\n";
	}
    void pop(){
    	TNode *hapus;
		int d;
		hapus = head;
		d = head->data;
		head=head->next;
		delete hapus;
		cout<<endl<<d<<" terambil\n";
    }
};

int main()
{
    MyStack s;
    s.push(8);
    s.push(3);
    s.push(2);
    s.push(9);
    s.pop();
    s.pop();
    s.pop();
    s.printStackList();
    return 0;
}
